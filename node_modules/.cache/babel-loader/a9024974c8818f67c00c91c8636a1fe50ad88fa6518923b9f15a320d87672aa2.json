{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\orebishopping\\\\src\\\\components\\\\pageProps\\\\shopPage\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Product from \"../../home/Products/Product\";\nimport { paginationItems } from \"../../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = paginationItems;\nfunction Items(_ref) {\n  let {\n    currentItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(Product, {\n        _id: item._id,\n        img: item.img,\n        productName: item.productName,\n        price: item.price,\n        color: item.color,\n        badge: item.badge,\n        des: item.des\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n_c = Items;\nconst Pagination = _ref2 => {\n  _s();\n  let {\n    itemsPerPage\n  } = _ref2;\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  const [itemStart, setItemStart] = useState(1);\n\n  // Simulate fetching items from another resources.\n  // (This could be items from props; or items loaded in a local state\n  // from an API endpoint with useEffect and useState)\n  const endOffset = itemOffset + itemsPerPage;\n  //   console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    setItemOffset(newOffset);\n    // console.log(\n    //   `User requested page number ${event.selected}, which is offset ${newOffset},`\n    // );\n    setItemStart(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-10 mdl:gap-4 lg:gap-10\",\n      children: /*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mdl:flex-row justify-center mdl:justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPaginate, {\n        nextLabel: \"\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 3,\n        marginPagesDisplayed: 2,\n        pageCount: pageCount,\n        previousLabel: \"\",\n        pageLinkClassName: \"w-9 h-9 border-[1px] border-lightColor hover:border-gray-500 duration-300 flex justify-center items-center\",\n        pageClassName: \"mr-6\",\n        containerClassName: \"flex text-base font-semibold font-titleFont py-10\",\n        activeClassName: \"bg-black text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base font-normal text-lightText\",\n        children: [\"Products from \", itemStart === 0 ? 1 : itemStart, \" to \", endOffset, \" of\", \" \", items.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagination, \"I1vy2A3CilnMc+6CFGCg6xK2Lj4=\");\n_c2 = Pagination;\nexport default Pagination;\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["React","useState","ReactPaginate","Product","paginationItems","jsxDEV","_jsxDEV","Fragment","_Fragment","items","Items","_ref","currentItems","children","map","item","className","_id","img","productName","price","color","badge","des","fileName","_jsxFileName","lineNumber","columnNumber","_c","Pagination","_ref2","_s","itemsPerPage","itemOffset","setItemOffset","itemStart","setItemStart","endOffset","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected","nextLabel","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageLinkClassName","pageClassName","containerClassName","activeClassName","_c2","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/orebishopping/src/components/pageProps/shopPage/Pagination.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Product from \"../../home/Products/Product\";\r\nimport { paginationItems } from \"../../../constants\";\r\n\r\nconst items = paginationItems;\r\nfunction Items({ currentItems }) {\r\n  return (\r\n    <>\r\n      {currentItems &&\r\n        currentItems.map((item) => (\r\n          <div key={item._id} className=\"w-full\">\r\n            <Product\r\n              _id={item._id}\r\n              img={item.img}\r\n              productName={item.productName}\r\n              price={item.price}\r\n              color={item.color}\r\n              badge={item.badge}\r\n              des={item.des}\r\n            />\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Pagination = ({ itemsPerPage }) => {\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const [itemStart, setItemStart] = useState(1);\r\n\r\n  // Simulate fetching items from another resources.\r\n  // (This could be items from props; or items loaded in a local state\r\n  // from an API endpoint with useEffect and useState)\r\n  const endOffset = itemOffset + itemsPerPage;\r\n  //   console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n  const currentItems = items.slice(itemOffset, endOffset);\r\n  const pageCount = Math.ceil(items.length / itemsPerPage);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    setItemOffset(newOffset);\r\n    // console.log(\r\n    //   `User requested page number ${event.selected}, which is offset ${newOffset},`\r\n    // );\r\n    setItemStart(newOffset);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-10 mdl:gap-4 lg:gap-10\">\r\n        <Items currentItems={currentItems} />\r\n      </div>\r\n      <div className=\"flex flex-col mdl:flex-row justify-center mdl:justify-between items-center\">\r\n        <ReactPaginate\r\n          nextLabel=\"\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={3}\r\n          marginPagesDisplayed={2}\r\n          pageCount={pageCount}\r\n          previousLabel=\"\"\r\n          pageLinkClassName=\"w-9 h-9 border-[1px] border-lightColor hover:border-gray-500 duration-300 flex justify-center items-center\"\r\n          pageClassName=\"mr-6\"\r\n          containerClassName=\"flex text-base font-semibold font-titleFont py-10\"\r\n          activeClassName=\"bg-black text-white\"\r\n        />\r\n\r\n        <p className=\"text-base font-normal text-lightText\">\r\n          Products from {itemStart === 0 ? 1 : itemStart} to {endOffset} of{\" \"}\r\n          {items.length}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}